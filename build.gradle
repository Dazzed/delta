buildscript {
	ext {
		springBootVersion = '1.5.10.RELEASE'
		cucumberVersion = '2.3.1'
    	cucumberProVersion = '2.0.4'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		//classpath ("org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.6.2")
	}
}

plugins {
	id "org.sonarqube" version "2.6.2"
}
apply plugin: 'jacoco'
//apply plugin: 'org.sonarqube'
apply plugin: 'war'
apply plugin: 'java'
apply plugin: 'eclipse'

apply plugin: 'org.springframework.boot'
tasks.withType(JavaCompile) {
	options.encoding = 'UTF-8'
}
war{
baseName="BsPrdTmpltSvcRst"
}
group = 'com.delta.cru'
//Do not uncomment version, this is causing Build conflicts in Jenkins
//version = '1.0'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
    maven {
		url "https://nexus.delta.com/repository/maven-public/"
	    //url "http://www.datanucleus.org/downloads/maven2/"
	}
	
	mavenLocal()
}

task unitTest(type:Test) {
    include '**/unttest/**'
}


configurations {
	providedRuntime
	cucumberRuntime {
    	extendsFrom testRuntime
  	}
}

project.ext {
    cucumberVersion = '2.3.1'
    cucumberProVersion = '2.0.4'
}

//Do not overlay, incorrect properties are causing SonarQube issues in Jenkins
sonarqube {
	properties {
		property "sonar.projectName", "BsPrdTmpltSvcRst"
		property "sonar.projectKey", "com.delta.crew.BsPrdTmpltSvcRst"
		property "sonar.language", "java"
		property "sonar.junit.reportsPath", "$projectDir/build/test-results/unitTest/"
		property "sonar.test.exclusions", "**/features/*, **/unttest/*"
		property "sonar.jacoco.reportPaths", "build/jacoco/unitTest.exec"
	}
}

task cucumber() {
    dependsOn assemble, compileTestJava
    doLast {
        javaexec {
            main = "cucumber.api.cli.Main"
            classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
            args = ['-f', 'json:build/cucumber-reports/CucumberTestReport.json', '--plugin', 'pretty', '--glue', 'com.delta.cru', 'src/test/java/com/delta/cru/cucumber/features']
        }
    }
}

task allTests(type:Test) {
    dependsOn cucumber
}

dependencies {
 	compile('org.springframework.boot:spring-boot-starter-actuator')
 	compile('org.springframework.boot:spring-boot-starter-web')
 	compile('org.springframework.boot:spring-boot-starter-aop')
 	compile('org.springframework.boot:spring-boot-starter-security')
 	compile('org.apache.commons:commons-lang3:3.0')
 	compile('commons-beanutils:commons-beanutils:1.9.3')
 	compile('commons-io:commons-io:2.6')
 	
 	compile('org.mybatis.spring.boot:mybatis-spring-boot-starter:1.3.1')
	compile ('io.springfox:springfox-swagger2:2.5.0')
    compile ('io.springfox:springfox-swagger-ui:2.5.0')
    compile ('io.springfox:springfox-bean-validators:2.5.0')
    compile fileTree(dir: 'libs', include: 'ojdbc6.jar')
    compile group: 'com.google.guava', name: 'guava', version: '21.0'
    //compile ('oracle:ojdbc6:11.2.0.3')
    //compile ('com.oracle:ojdbc14:10.2.0.4.0')
    
    //Dependencies will not be part of the WAR/EAR and will be used only for testing
    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile ('junit:junit:4.12')
    testCompile ('org.mockito:mockito-core:2.15.0')
    testCompile ('org.mockito:mockito-all:1.9.5')
	testCompile ('org.assertj:assertj-core:3.8.0')
    testCompile ('io.cucumber:cucumber-java:' + cucumberVersion)
    testCompile ('io.cucumber:cucumber-junit:' + cucumberVersion)
    testCompile ('io.cucumber:pro-plugin:' + cucumberProVersion)
    testCompile ('info.cukes:cucumber-spring:1.2.4')
    
    //Dependencies will not be part of compilation classpath
    providedRuntime('org.apache.tomcat:tomcat-dbcp:8.0.50')
    providedRuntime("org.springframework.boot:spring-boot-starter-tomcat")
}
